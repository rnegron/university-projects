//********************************************************************
//                                                                   *
//   Programador 1: Angel Casiano        CCOM 3033 Sección 001       *
//   Num. Est.   : 801-13-1104           Segundo Semestre 2013-14    *
//   Programador 2: Raúl Negrón 									 *
//   Num. Est.   : 801-13-4680              						 *
//   Lab07                               Prof. Rafael Arce           *
//   Archivo     : login.cpp             Fecha : Marzo, 14 2014      *
//                                                                   *
//********************************************************************
//                                                                   *
//    Proposito :	Este programa le pide al usuario que entre un    *
//                  username y un password. Luego verifica si ese    *
//					username y password corresponden a algun         *
//					username y password en el archivo "shadow". Los  *
//					passwords estan encriptados de tal manera que es *
//					necesario encriptar el password dado y verificar *
//					el resultado de la encripcion con el password    *
//					localizado en el archivo. El usuario tiene 3     *
//					oportunidades para entrar el username y password * 
//					correcto. Si logra entrar correctamente, se le   *
//					presenta un mensaje "Welcome". De no lograr      *
//					entrar en 3 intentos, el programa termina.       *   
//													                 *
//********************************************************************


/*
PSEUDOCIDIGO

INPUT username 
INPUT password
intentos = 2
OPEN shadow
WHILE intentos >= 0:
	comparar username con el primer valor leido en shadow y password con el segundo valor leido en shadow
	IF username == primer valor y password == segundo valor THEN desplegar "WELCOME!" y terminar
	ELSE intentos = intentos - 1
END WHILE
desplagar "Se acabaron los intentos, disculpe." y terminar

*/


// Direcciones al pre-processador
#include <crypt.h>
#include <iostream>
#include <fstream>
#include <termios.h>
#include <unistd.h>
using namespace std;

//
// This is a wrapper for the crypt function, but it accepts
// string objects instead of C-style strings.
//

string myCrypt(string st, string salt) {
  return string(crypt(st.c_str(),salt.c_str()));
}

//
// I grabbed this one from http://stackoverflow.com/questions/1413445/read-a-password-from-stdcin
//

void SetStdinEcho(bool enable = true) {
#ifdef WIN32
    HANDLE hStdin = GetStdHandle(STD_INPUT_HANDLE); 
    DWORD mode;
    GetConsoleMode(hStdin, &mode);

    if( !enable ) mode &= ~ENABLE_ECHO_INPUT;
    else          mode |= ENABLE_ECHO_INPUT;

    SetConsoleMode(hStdin, mode );

#else
    struct termios tty;
    tcgetattr(STDIN_FILENO, &tty);
    if( !enable )  tty.c_lflag &= ~ECHO;
    else           tty.c_lflag |= ECHO;

    (void) tcsetattr(STDIN_FILENO, TCSANOW, &tty);
#endif
}


//
// Just a function to print the welcome message.
// Generated by http://www.network-science.de/ascii/
//

void welcome() {
  cout << "\ndb   d8b   db d88888b db       .o88b.  .d88b.  .88b  d88. d88888b db db\n" 
       << "88   I8I   88 88'     88      d8P  Y8 .8P  Y8. 88'YbdP`88 88'     88 88\n"  
       << "88   I8I   88 88ooooo 88      8P      88    88 88  88  88 88ooooo YP YP\n"  
       << "Y8   I8I   88 88~~~~~ 88      8b      88    88 88  88  88 88~~~~~      \n"  
       << "`8b d8'8b d8' 88.     88booo. Y8b  d8 `8b  d8' 88  88  88 88.     db db\n" 
       << " `8b8' `8d8'  Y88888P Y88888P  `Y88P'  `Y88P'  YP  YP  YP Y88888P YP YP\n";
}


int main() {
	
	// Definicion de variables
	string enteredUName, enteredPWord;   // en estos strings se guardan el INPUT del usuario 
	string lineUName, linePassword;      // en estos strings se guardan los valores leidos del archivo 
	int intentos = 2 ;                   // el usuario solo tiene 3 intentos (mientras intentos sea mayor o igual a 0)
	ifstream inputFile("shadow") ;       // inicializar y abrir el archivo de entrada

	cout << "\nWelcome to the CCOM server! Please login." << endl;
	
	// Este loop contiene la mayoria del programa y corre solo 3 veces.
	while(intentos >= 0) {
	// Desplegar la cantidad de intentos disponibles
	cout << intentos << " tries left."<< endl;
	
	// Pedir el username y password
	cout << "Username: "; cin >> enteredUName;
	cout <<  "Password: ";

	// These instructions allow the user to enter a password 
	// but do not show it in the console.
	SetStdinEcho(false);
	cin >> enteredPWord;
	SetStdinEcho(true);
	cout << endl;
	
	// Comenzar a leer el archivo, recibiendo dos valores por linea (username, password)
	// este loop termina cuando se acaban los datos en el archivo (EOF)
	while(inputFile >> lineUName >> linePassword) {

		// Si el username entrado y el password decriptado son iguales, permitir acceso
	    if ((enteredUName == lineUName) && (myCrypt (enteredPWord, linePassword) == linePassword)) {	
			// Desplegar el mensaje de bienvenida, cerrar el archivo y terminar el programa
			welcome() ;
			inputFile.close() ;
			return 0 ;
	    }
	}

	intentos-- ; // decrementamos la variable intentos
	inputFile.clear() ; // resetea el flag de eof
	inputFile.seekg(0, ios::beg) ; // regresa el lector al principio
	}
	
	// Desplegarle al usuario que se le acabaron los intentos, cerrar el archivo y terminar el programa
	cout << "Too many wrong tries. Goodbye! :-(" << endl;
	inputFile.close();
	return 0;
	}
